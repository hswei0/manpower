filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
varbook <- codebook %>%
filter(var %in% c("x01", "x01d", "x02", "a01", "a02", "b01")) %>%
mutate(var_name = c("id", "household", "sample_year", "gender", "birthy", "educ")) %>%
select(var, var_name, note, value)
return(varbook)
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2004.xlsx",
col_names = F) %>%
clean_codebookrci0405(.) %>%
list(varrci2004 = .) %>%
c(RRandRCI_var.lt, .)
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2005.xlsx",
col_names = F) %>%
clean_codebookrci0405(.) %>%
list(varrci2005 = .) %>%
c(RRandRCI_var.lt, .)
RRandRCI_var.lt$varrci2005
clean_codebookrci0714 <- function(codebook){
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
varbook <- codebook %>%
filter(var %in% c("x01", "x01d", "x02", "a01", "a02z01", "b01")) %>% # 出生年
mutate(var_name = c("id", "household", "sample_year", "gender", "birthy", "educ")) %>%
select(var, var_name, note, value)
return(varbook)
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2007.xlsx",
col_names = F) %>%
clean_codebookrci0714(.) %>%
list(varrci2007 = .) %>%
c(RRandRCI_var.lt, .)
# rci2007 -----------------------------------------------------------------
clean_codebookrci070914 <- function(codebook){
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
varbook <- codebook %>%
filter(var %in% c("x01", "x01d", "x02", "a01", "a02z01", "b01")) %>% # 出生年
mutate(var_name = c("id", "household", "sample_year", "gender", "birthy", "educ")) %>%
select(var, var_name, note, value)
return(varbook)
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2007.xlsx",
col_names = F) %>%
clean_codebookrci070914(.) %>%
list(varrci2007 = .) %>%
c(RRandRCI_var.lt, .)
# rci2009 -----------------------------------------------------------------
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2009.xlsx",
col_names = F) %>%
clean_codebookrci070914(.) %>%
list(varrci2009 = .) %>%
c(RRandRCI_var.lt, .)
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2014.xlsx",
col_names = F) %>%
clean_codebookrci070914(.) %>%
list(varrci2014 = .) %>%
c(RRandRCI_var.lt, .)
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2011.xlsx",
col_names = F) %>%
clean_codebookrci070914(.) %>%
list(varrci2011 = .) %>%
c(RRandRCI_var.lt, .)
clean_codebookrci11 <- function(codebook){ # 竟然沒有戶號！
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
varbook <- codebook %>%
filter(var %in% c("x01", "x02", "a01", "a02z01", "b01")) %>% # 出生年
mutate(var_name = c("id", "sample_year", "gender", "birthy", "educ")) %>%
select(var, var_name, note, value)
varbook
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2011.xlsx",
col_names = F) %>%
clean_codebookrci11(.) %>%
list(varrci2011 = .) %>%
c(RRandRCI_var.lt, .)
RRandRCI_var.lt$varrci2011
View(RRandRCI_var.lt)
##############################################
#### 處理rr 和 ric 追蹤資料更新的codebook ####
##############################################
# 追蹤資料 --------------------------------------------------------------------
if (!require(pacman)) install.packages(pacman)
pacman::p_load(tidyverse, magrittr, readxl, haven, funModeling, sjlabelled, sjmisc)
# setwd('/Users/hsuwei/Google Drive/Research/dataset/PSFD') rr2007.df <- read_dta('rr2007.dta')
# rr2007 ------------------------------------------------------------------
clean_codebook0708 <- function(codebook) {# 僅適用於2007,2008
codebook %<>% select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>% filter(!is.na(var)) %>% filter(str_detect(.[["var"]], "[a-z]"))
### 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]], "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]], "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]], "\\s+", "")
a <- codebook %>% filter(str_detect(codebook[[2]], "子女\\d")) %>%
slice(c(1:3, 5, 11:13, 15, 21:23, 25, 31:33, 35, 41:43, 45, 51:53, 55)) %>%
separate(note, c("chi", "var2"), sep = 3, remove = F)
a$chi <- str_replace_all(a$chi, "子女", "chi")
a$var2 <- str_replace_all(a$var2, c(排行 = NA, 性別 = "gender", 出生年 = "birthy",
教育程度 = "educ"))
a <- filter(a, !is.na(var2))
a %<>% unite(var_name, chi, var2)
a <- codebook %>% filter(str_detect(.[[2]], "您目前有幾個小孩")) %>%
mutate(var_name = "children") %>%
bind_rows(a)
varbook <- codebook %>% filter(var == "x01" | var == "x01d" | var == "x02") %>%
mutate(var_name = c("id", "household", "sample_year")) %>%
bind_rows(a) %>%
select(var, var_name, note, value)
return(varbook)
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2007.xlsx",
col_names = F) %>%
clean_codebook0708(.) %>%
list(var2007 = .)
# rr2008 ------------------------------------------------------------------
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2008.xlsx",
col_names = F) %>%
clean_codebook0708(.) %>%
list(var2008 = .) %>%
c(RRandRCI_var.lt, .)
# rr2009 ------------------------------------------------------------------
clean_codebook09 <- function(codebook) { # 僅適用於2009
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
a <- codebook %>%
filter(str_detect(codebook[[2]], "子女\\d")) %>%
slice(c(2:3, 5, 13:14, 16, 24:25, 27, 35:36, 38, 46:47, 49, 57:58, 60)) %>%
separate(note, c("chi", "var2"), sep = 3, remove = F)
a$chi <- str_replace_all(a$chi, "子女", "chi")
a$var2 <- str_replace_all(a$var2, c("排行" = NA, "性別" = "gender", "出生年" = "birthy",
"教育程度" = "educ"))
a <- filter(a, !is.na(var2))
a %<>%
unite(var_name, chi, var2)
a <- codebook %>%
filter(str_detect(.[[2]], "您目前有幾個小孩")) %>%
mutate(var_name = "children") %>%
bind_rows(a)
varbook <- codebook %>%
filter(var == "x01" | var == "x01d" | var == "x02" ) %>%
mutate(var_name = c("id", "household", "sample_year")) %>%
bind_rows(a) %>%
select(var, var_name, note, value)
return(varbook)
}
## `子女4`的變項有缺漏，需手動填補
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2009.xlsx",
col_names = F) %>%
clean_codebook09(.) %>%
list(var2009 = .) %>%
c(RRandRCI_var.lt, .)
# rr2010 ------------------------------------------------------------------
clean_codebook1011 <- function(codebook) { # 僅適用於2010
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
a <- codebook %>%
filter(str_detect(codebook[[2]], "子女\\d")) %>%
slice(c(2:3, 5, 13:14, 16, 24:25, 27, 35:36, 38, 46:47, 49, 57:58, 60)) %>%
separate(note, c("chi", "var2"), sep = 5, remove = F) # 改成5個字元
a$chi <- str_replace_all(a$chi, "健在子女", "chi")
a$var2 <- str_replace_all(a$var2, c("排行" = NA, "性別" = "gender", "出生年" = "birthy",
"教育程度" = "educ"))
a <- filter(a, !is.na(var2))
a %<>%
unite(var_name, chi, var2)
a <- codebook %>%
filter(str_detect(.[[2]], "您目前有幾個小孩")) %>%
mutate(var_name = "children") %>%
bind_rows(a)
varbook <- codebook %>%
filter(var == "x01" | var == "x01d" | var == "x02" ) %>%
mutate(var_name = c("id", "household", "sample_year")) %>%
bind_rows(a) %>%
select(var, var_name, note, value)
varbook
}
## `子女4`的變項有缺漏，需手動填補
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2010.xlsx",
col_names = F) %>%
clean_codebook1011(.) %>%
list(var2010 = .) %>%
c(RRandRCI_var.lt, .)
# rr2011 ------------------------------------------------------------------
## 手動處理`子女2`
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2011.xlsx",
col_names = F) %>%
clean_codebook1011(.) %>%
list(var2011 = .) %>%
c(RRandRCI_var.lt, .)
# rr2012 ------------------------------------------------------------------
clean_codebook12 <- function(codebook) { # 僅適用於2012
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
a <- codebook %>%
filter(str_detect(codebook[[2]], "子女\\d")) %>%
slice(c(2:3, 5, 13:14, 16, 24:25, 27, 35:36, 38, 46:47, 49, 57:58, 60)) %>%
separate(note, c("chi", "var2"), sep = 5, remove = F) # 改成5個字元
a$chi <- str_replace_all(a$chi, "健在子女", "chi")
a$var2 <- str_replace_all(a$var2, c("排行" = NA, "性別" = "gender",
"出生年" = "birthy", "教育程度" = "educ"))
a <- filter(a, !is.na(var2))
a %<>%
unite(var_name, chi, var2)
a <- codebook %>%
filter(str_detect(.[[2]], "您目前有幾個小孩")) %>%
mutate(var_name = "children") %>%
bind_rows(a)
varbook <- codebook %>%
filter(var == "x01" | var == "x01d") %>% # 沒有sample_year
mutate(var_name = c("id", "household")) %>%
bind_rows(a) %>%
select(var, var_name, note, value)
varbook
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2012.xlsx",
col_names = F) %>%
clean_codebook12(.) %>%
list(var2012 = .) %>%
c(RRandRCI_var.lt, .)
# rr2014 ------------------------------------------------------------------
clean_codebook14 <- function(codebook) { # 僅適用於2014
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
a <- codebook %>%
filter(str_detect(codebook[[2]], "子女\\d")) %>%
slice(c(2:3, 5, 17:18, 20, 32:33, 35, 47:48, 50, 62:63, 65, 77:78, 80)) %>%
separate(note, c("chi", "var2"), sep = 5, remove = F) # 改成5個字元
a$chi <- str_replace_all(a$chi, "健在子女", "chi")
a$var2 <- str_replace_all(a$var2, c("排行" = NA, "性別" = "gender", "出生年" = "birthy",
"教育程度" = "educ"))
a <- filter(a, !is.na(var2))
a %<>%
unite(var_name, chi, var2)
a <- codebook %>%
filter(str_detect(.[[2]], "您目前有幾個小孩")) %>%
mutate(var_name = "children") %>%
bind_rows(a)
varbook <- codebook %>%
filter(var == "x01" | var == "x01d" | var == "x02" ) %>%
mutate(var_name = c("id", "household", "sample_year")) %>%
bind_rows(a) %>%
select(var, var_name, note, value)
return(varbook)
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2014.xlsx",
col_names = F) %>%
clean_codebook14(.) %>%
list(var2014 = .) %>%
c(RRandRCI_var.lt, .)
# rr2016 ------------------------------------------------------------------
clean_codebook16 <- function(codebook) { # 僅適用於2016
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
a <- codebook %>%
filter(str_detect(codebook[[2]], "子女\\d")) %>%
slice(c(2:3, 8, 20:21, 26, 38:39, 44, 56:57, 62, 74:75, 80, 92:93, 98)) %>% # 題項增加
separate(note, c("chi", "var2"), sep = 5, remove = F) # 改成5個字元
a$chi <- str_replace_all(a$chi, "健在子女", "chi")
a$var2 <- str_replace_all(a$var2, c("排行" = NA, "性別" = "gender", "出生年" = "birthy",
"目前就學狀況" = "educ")) # 教育有變動
a <- filter(a, !is.na(var2))
a %<>%
unite(var_name, chi, var2)
a <- codebook %>%
filter(str_detect(.[[2]], "您目前有幾個小孩")) %>%
mutate(var_name = "children") %>%
bind_rows(a)
varbook <- codebook %>%
filter(var == "x01" | var == "x01d" | var == "x02" ) %>%
mutate(var_name = c("id", "household", "sample_year")) %>%
bind_rows(a) %>%
select(var, var_name, note, value)
return(varbook)
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rr2016.xlsx",
col_names = F) %>%
clean_codebook16(.) %>%
list(var2016 = .) %>%
c(RRandRCI_var.lt, .)
# rci ---------------------------------------------------------------------
clean_codebookrci0405 <- function(codebook){
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
varbook <- codebook %>%
filter(var %in% c("x01", "x01d", "x02", "a01", "a02", "b01")) %>%
mutate(var_name = c("id", "household", "sample_year", "gender", "birthy", "educ")) %>%
select(var, var_name, note, value)
return(varbook)
}
# rci2004 -----------------------------------------------------------------
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2004.xlsx",
col_names = F) %>%
clean_codebookrci0405(.) %>%
list(varrci2004 = .) %>%
c(RRandRCI_var.lt, .)
# rci2005 -----------------------------------------------------------------
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2005.xlsx",
col_names = F) %>%
clean_codebookrci0405(.) %>%
list(varrci2005 = .) %>%
c(RRandRCI_var.lt, .)
# rci2007 -----------------------------------------------------------------
clean_codebookrci070914 <- function(codebook){
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
varbook <- codebook %>%
filter(var %in% c("x01", "x01d", "x02", "a01", "a02z01", "b01")) %>% # 出生年
mutate(var_name = c("id", "household", "sample_year", "gender", "birthy", "educ")) %>%
select(var, var_name, note, value)
return(varbook)
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2007.xlsx",
col_names = F) %>%
clean_codebookrci070914(.) %>%
list(varrci2007 = .) %>%
c(RRandRCI_var.lt, .)
# rci2009 -----------------------------------------------------------------
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2009.xlsx",
col_names = F) %>%
clean_codebookrci070914(.) %>%
list(varrci2009 = .) %>%
c(RRandRCI_var.lt, .)
# rci2014 -----------------------------------------------------------------
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2014.xlsx",
col_names = F) %>%
clean_codebookrci070914(.) %>%
list(varrci2014 = .) %>%
c(RRandRCI_var.lt, .)
# rci2011 -----------------------------------------------------------------
clean_codebookrci11 <- function(codebook){ # 竟然沒有戶號！
codebook %<>%
select(2:4)
names(codebook) <- c("var", "note", "value")
codebook %<>%
filter(!is.na(var)) %>%
filter(str_detect(.[["var"]], "[a-z]")) # 去除標題列
## 去除空格
codebook[[1]] <- str_replace_all(codebook[[1]] , "\\s+", "")
codebook[[2]] <- str_replace_all(codebook[[2]] , "\\s+", "")
codebook[[3]] <- str_replace_all(codebook[[3]] , "\\s+", "")
varbook <- codebook %>%
filter(var %in% c("x01", "x02", "a01", "a02z01", "b01")) %>% # 出生年
mutate(var_name = c("id", "sample_year", "gender", "birthy", "educ")) %>%
select(var, var_name, note, value)
varbook
}
RRandRCI_var.lt <- read_xlsx("/Users/hsuwei/Google Drive/Research/Git/the children/variable/rci2011.xlsx",
col_names = F) %>%
clean_codebookrci11(.) %>%
list(varrci2011 = .) %>%
c(RRandRCI_var.lt, .)
View(RRandRCI_var.lt)
source("/Users/hsuwei/Google Drive/Research/git2/the children/RRandRCI_codebook.R")
View(clean_codebook0708)
save(RRandRCI_var.lt, file = "/Users/hsuwei/Google Drive/Research/git2/the children/RRandRCI_codebook.RData")
source("/Users/hsuwei/Google Drive/Research/git2/the children/RRandRCI_codebook.RData")
load("/Users/hsuwei/Google Drive/Research/git2/the children/RRandRCI_codebook.RData")
View(RRandRCI_var.lt)
# 年齡別非典型比例 --------------------------------------------------------------------
library(tidyverse)
setwd("/Users/hsuwei/Desktop/man")
download_fn <- function(year, mtable) { ## 資料年份(民國), 資料表格號碼
temp = tempfile(fileext = ".xls")
dataURL <- str_c("https://www.dgbas.gov.tw/public/data/dgbas04/bc4/mpwutility",
year, str_c(mtable, ".xls"), sep = "/")
download.file(dataURL, destfile = temp, mode = 'wb')
if (year < 104) {
df1 <- readxl::read_excel(temp, col_names = F, range = "J9:Q54", col_types = c("text"))
df2 <- df1 %>%
slice(c(2, 3, 6, 11, 16)) %>%
mutate_at(vars(X__2:X__8), as.numeric) %>%
mutate(X__1 = c("Total", "15-24 years", "25-44 years", "45-64 years", "65 years & over"))
names(df2) <- df1[1, ]
} else {
df1 <- readxl::read_excel(temp, col_names = F, range = "K9:R54")
df2 <- df1 %>%
slice(c(2, 3, 6, 11, 16)) %>%
mutate_at(vars(X__2:X__8), as.numeric) %>%
mutate(X__1 = c("Total", "15-24 years", "25-44 years", "45-64 years", "65 years & over"))
names(df2) <- df1[1, ]
}
return(df2)
}
y_range <- 2011 : 2017 - 1911
mtable <- ifelse(y_range < 104, "mtable18", "mtable17")
## 表 17 就業者主要工作之類別－按年齡分，有年份差異
all.lt <- map2(y_range, mtable, download_fn)
names(all.lt) <- str_c(2011:2017, "major_job")
aa <- all.lt$`2015major_job`
pickvar <- function(df, col_n) {
out.df <- df %>%
select(col_n) %>%
slice(1:2) ## keep total, 15-24
return(out.df)
}
PTD.df <- map_dfc(all.lt, function(x) {
xx <- select(x, 3) %>%
slice(1:2) ## keep total, 15-24
xx
})
colnames(PTD.df) <- 2011:2017
rownames(PTD.df) <- c("Total", "15-24 years")
P.df <- map_dfc(all.lt, function(x) {
xx <- select(x, 6) %>% #part time
slice(1:2) ## keep total, 15-24
xx
})
colnames(P.df) <- 2011:2017
rownames(P.df) <- c("Total", "15-24 years")
TD.df <- map_dfc(all.lt, function(x) {
xx <- select(x, 7) %>% #part time
slice(1:2) ## keep total, 15-24
xx
})
colnames(TD.df) <- 2011:2017
rownames(TD.df) <- c("Total", "15-24 years")
out1 <- bind_rows(PTD.df, P.df) %>%
bind_rows(TD.df) %>%
mutate(rowname = rep(c("Total", "15-24 years"), 3),
cate = c(names(all.lt[["2017major_job"]])[3], "",
names(all.lt[["2017major_job"]])[6], "",
names(all.lt[["2017major_job"]])[7], "")) %>%
select(cate, rowname, everything())
varnames <- names(all.lt$`2017major_job`)
write_csv(out1, path = str_c(getwd(), "result", "nonstandard.csv", sep = "/"))
